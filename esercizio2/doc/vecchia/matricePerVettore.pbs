#!/bin/bash
##########################
#
#
# The PBS directives #
#
#
##########################
#PBS -q studenti
#PBS -l nodes=1:ppn=8
#PBS -N matricePerVettore
#PBS -o matricePerVettore.out
#PBS -e matricePerVettore.err
##########################################
# -q coda su cui va eseguito il job #
# -l numero di nodi richiesti #
# -N nome job(stesso del file pbs) #
# -o, -e nome files contenente l'output #
##########################################
#
#
# qualche informazione sul job #
#
#
##########################################
NCPU=`wc -l < $PBS_NODEFILE`
echo ------------------------------------------------------
echo ' This job is allocated on '${NCPU}' cpu(s)'
echo 'Job is running on node(s): '
cat $PBS_NODEFILE


PBS_O_WORKDIR=$PBS_O_HOME/matricePerVettore
echo ------------------------------------------------------
echo PBS: qsub is running on $PBS_O_HOST
echo PBS: originating queue is $PBS_O_QUEUE
echo PBS: executing queue is $PBS_QUEUE
echo PBS: working directory is $PBS_O_WORKDIR
echo PBS: execution mode is $PBS_ENVIRONMENT
echo PBS: job identifier is $PBS_JOBID
echo PBS: job name is $PBS_JOBNAME
echo PBS: node file is $PBS_NODEFILE
echo PBS: current home directory is $PBS_O_HOME
echo PBS: PATH = $PBS_O_PATH
echo ------------------------------------------------------

echo "Compiling matricePerVettore.c with gcc"
gcc -std=c99 -fopenmp -lgomp -o $PBS_O_WORKDIR/matricePerVettore $PBS_O_WORKDIR/matricePerVettore.c

echo "Start Testing"
for i in {1..5}
do
    for t in {1..8}
    do
        export OMP_NUM_THREADS=$t
        echo Run test on $OMP_NUM_THREADS threads
        $PBS_O_WORKDIR/matricePerVettore 100 100 >> $PBS_O_WORKDIR/results/${t}t_100x100.txt
        $PBS_O_WORKDIR/matricePerVettore 1000 1000 >> $PBS_O_WORKDIR/results/${t}t_1000x1000.txt
        $PBS_O_WORKDIR/matricePerVettore 10000 10000 >> $PBS_O_WORKDIR/results/${t}t_10000x10000.txt
    done
done

