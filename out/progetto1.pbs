#!/bin/bash
##########################
#
#
# The PBS directives #
#
#
##########################
#PBS -q studenti
#PBS -l nodes=8
#PBS -N progetto1
#PBS -o progetto1.out
#PBS -e progetto1.err
##########################################
# -q coda su cui va eseguito il job #
# -l numero di nodi richiesti #
# -N nome job(stesso del file pbs) #
# -o, -e nome files contenente l'output #
##########################################
#
#
# Somma di numeri parallela e distribuita.
#
#
##########################################
echo ------------------------------------------------------
echo PBS: qsub is running on $PBS_O_HOST
echo PBS: originating queue is $PBS_O_QUEUE
echo PBS: executing queue is $PBS_QUEUE
echo PBS: working directory is $PBS_O_WORKDIR
echo PBS: execution mode is $PBS_ENVIRONMENT
echo PBS: job identifier is $PBS_JOBID
echo PBS: job name is $PBS_JOBNAME
echo PBS: node file is $PBS_NODEFILE
echo PBS: number of nodes is $NNODES
echo PBS: current home directory is $PBS_O_HOME
echo PBS: PATH = $PBS_O_PATH
echo ------------------------------------------------------
echo
echo Job reserved nodes:
cat $PBS_NODEFILE
echo
echo ------------------------------------------------------
echo
sort -u $PBS_NODEFILE > hostlist
head -1 hostlist > host1
NCPU=$(wc -l < hostlist)
cat hostlist
echo
echo ------------------------------------------------------
echo
PBS_O_WORKDIR=$PBS_O_HOME/esercizio1/CPD

/usr/lib64/openmpi/1.4-gcc/bin/mpicc -std=c99 $PBS_O_WORKDIR/sommaPar.c -o $PBS_O_WORKDIR/sommaPar -lm

echo compilation terminated
echo ------------------------------------------------------

echo Start testing
echo "-------------- test 1 processor --------------"

head -1 hostlist > host1
for n in 100 1000 10000 100000 1000000 10000000 100000000 1000000000
do
    echo Test: $n numbers
    for i in {1..5}
    do
        res=$(/usr/lib64/openmpi/1.4-gcc/bin/mpiexec -machinefile host1 -np 1 $PBS_O_WORKDIR/sommaPar 1 $n)
        echo $res >> $PBS_O_WORKDIR/results/p1_$n.txt
    done
done


for p in 2 4 8
do
   head -$p hostlist > host$p
    echo "-------------- test $p processor --------------"
    for strat in 1 2 3
    do
        for n in 100 1000 10000 100000 1000000 10000000 100000000 1000000000
        do
            echo Strategy: $strat, test: $n numbers
            for i in {1..5}
            do
                res=$(/usr/lib64/openmpi/1.4-gcc/bin/mpiexec -machinefile host$p -np $p $PBS_O_WORKDIR/sommaPar $strat $n)
                echo $res >> $PBS_O_WORKDIR/results/p${p}s${strat}$n.txt
            done
        done
    done
done
